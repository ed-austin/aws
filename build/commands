1!install aws cli!sudo apt install awscli%
2!install kubectl!"curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl"
3!install KOPS!"curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '\"' -f 4)/kops-linux-amd64;
chmod +x kops-linux-amd64;
sudo mv kops-linux-amd64 /usr/local/bin/kops"
4!install kubectx and kubens!"wget https://raw.githubusercontent.com/ahmetb/kubectx/master/kubectx;
wget https://raw.githubusercontent.com/ahmetb/kubectx/master/kubens;
chmod +x kubectx kubens;
sudo mv kubens kubectx /usr/local/bin"
5!install tree!sudo apt-get install tree
6!install jq (see stendolan.github - this is for ubuntu)!sudo apt-get install jq
7!install helm!curl -sSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
11!create group and set permissions for docker, then logout & log back in!"sudo groupadd docker;
sudo usermod -aG docker ubuntu"
21!create KOPS iam!"aws iam create-group --group-name kops;
aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonEC2FullAccess --group-name kops;
aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonRoute53FullAccess --group-name kops;
aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonS3FullAccess --group-name kops;
aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/IAMFullAccess --group-name kops;
aws iam attach-group-policy --policy-arn arn:aws:iam::aws:policy/AmazonVPCFullAccess --group-name kops;
aws iam create-user --user-name kops;
aws iam add-user-to-group --user-name kops --group-name kops;
aws iam create-access-key --user-name kops"
22!run aws configure!aws configure
23!run aws list-users!aws list-users
24!export the aws access key parms!"export AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id);
export AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_access_key);"
25!prepare local environment (update as needed)!"export NAME=mycluster.k8s.local;
export KOPS_STATE_STORE=s3://epsj/cluster"
26!describe aws avail zones (use us-east1)!aws ec2 describe-availability-zones --region us-east-1
27!create the cluster!kops create cluster --zones=us-east-1a ${NAME}
28!update the cluster config file!kops update cluster ${NAME} --yes
29!list the created nodes!kubectl get nodes
30!validate cluster!kops validate cluster --wait 10m
31!look at all system components!kubectl -n kube-system get pods
32!Delete the cluster!kops delete cluster --name ${NAME} --yes
